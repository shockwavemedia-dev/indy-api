
image: php:8.0-fpm
pipelines:
  branches:
    '{development}':
      - step:
          script:
            - echo "For now will run pipeline on development only"
  default:
    - step:
        name: Test
        caches:
          - composer
        artifacts:
          - storage/**
          - vendor/**
          - public/**
          - .env
        script:
          #Update Image
          - apt-get update

          #Install Zip
          - apt-get install libzip-dev --assume-yes
          - apt-get install -qy zlib1g-dev zip unzip
          - docker-php-ext-install zip

          #Install Git
          - apt-get install -qy git
          - apt-get install -qy curl

          #Install MySql
          - apt-get install mariadb-server --assume-yes
          - docker-php-ext-install pdo_mysql

          #Install Crypt
          - apt-get install -qy libmcrypt-dev
          - yes | pecl install mcrypt-1.0.4

          #Install Composer Platform Reqs
          - docker-php-ext-install bcmath

          #Copy Environment File
          - ln -f -s .env.pipelines .env

          #Install Composer
          - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          - composer install

          # generate key
          - cp .env.example .env

          #Migrate Database
          - php artisan key:generate
          - php artisan test

          #Run Test Suite
          - ./vendor/bin/phpunit --verbose
        services:
          #Add MySql Database
          - mysql
    # Additional Manual Step for Deployer if Needed.
    # Otherwise move "artisan deploy..." to testing step so deployment is automatic.
definitions:
  services:
    mysql:
      image: mysql/mysql-server:8.0
      environment:
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        MYSQL_DATABASE: 'crm_api'
        MYSQL_PASSWORD: 'password'
        MYSQL_USER: 'sail'
